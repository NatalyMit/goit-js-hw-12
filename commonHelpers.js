import{S as f,a as L,i as d}from"./assets/vendor-ed396e71.js";(function(){const l=document.createElement("link").relList;if(l&&l.supports&&l.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();function m(n,l){const t=new f(".gallery-images a",{captionDelay:250}),s=n.map(({webformatURL:e,largeImageURL:r,tags:c,likes:u,views:g,comments:y,downloads:h})=>`<li class = "list-item">
      <a href="${r}" ><img class="search-image" src = "${e}" alt = "${c}" ><div class="options">
      <p class="options-item"> likes:<span class="options-item-span">${u}</span></p>
      <p class="options-item"> views:<span class="options-item-span">${g}</span></p>
      <p class="options-item"> comments:<span class="options-item-span">${y}</span></p>
      <p class="options-item"> downloads:<span class="options-item-span">${h}</span></p></div>
    
      </a>
      
      </li>`).join("");l.insertAdjacentHTML("beforeend",s),t.refresh()}async function p({query:n,page:l=1}){const t="https://pixabay.com",s="41909271-8b5dab2225a1cd5a9757159a5",e="api/";try{const r=await L.get(`${t}/${e}`,{params:{key:s,q:n,image_type:"photo",orientation:"horizontal",safesearch:"true",per_page:40,page:l}});return console.log(r),r.data}catch(r){iziToast.error({title:"Error",titleSize:"30",messageSize:"25",message:"Sorry! Try later! Server not working"}),console.error(r.message)}}const o={formEl:document.querySelector(".form-search"),galleryEL:document.querySelector(".gallery-images"),loadMoreEl:document.querySelector('[data-action="load-more"]'),preloader:document.getElementById("preloader"),loaderGallery:document.querySelector(".loader-gallery")},a="is-hidden",i={query:"",page:1,maxPage:0};o.formEl.addEventListener("submit",E);async function E(n){n.preventDefault(),o.galleryEL.innerHTML="",o.loaderGallery.classList.remove(a),i.page=1;const l=n.currentTarget;if(i.query=l.elements.query.value.trim(),!i.query){o.loaderGallery.classList.add(a),d.show({title:"❌",messageColor:"white",message:"Sorry, You have not entered any word.Please try again!",position:"topRight",color:"yellow"});return}try{const{hits:t,totalHits:s}=await p(i);if(!s){o.loadMoreEl.classList.add(a),d.show({title:"❌",messageColor:"white",message:"Sorry, we dont have any pictures for your request.Please try again!",messageSize:"25",position:"topRight",color:"yellow"});return}i.maxPage=Math.ceil(s/40),m(t,o.galleryEL),t.length>0&&t.length!==s?o.loadMoreEl.classList.remove(a):t.length?o.loadMoreEl.classList.add(a):(o.loadMoreEl.classList.add(a),d.error({title:"Error",titleSize:"30",messageSize:"25",message:"Sorry, there are no images matching your search query. Please try again!"}))}catch{console.log(err)}finally{o.loaderGallery.classList.add(a),l.reset()}o.loadMoreEl.addEventListener("click",async function t(){if(i.page===i.maxPage){o.loadMoreEl.classList.add(a),o.loadMoreEl.removeEventListener("click",t),d.show({title:"Finish",messageColor:"white",message:"We're sorry, but you've reached the end of search results.",position:"bottomCenter",color:"blue"});return}i.page+=1,o.preloader.classList.remove(a),o.loadMoreEl.classList.add(a),o.loadMoreEl.disabled=!0;const s=document.querySelector(".list-item").getBoundingClientRect();try{const{hits:e}=await p(i);m(e,o.galleryEL)}catch(e){console.log(e)}finally{window.scrollBy({top:s.height*2,left:0,behavior:"smooth"}),o.preloader.classList.add(a),o.loadMoreEl.disabled=!1,o.loadMoreEl.classList.remove(a)}})}
//# sourceMappingURL=commonHelpers.js.map
